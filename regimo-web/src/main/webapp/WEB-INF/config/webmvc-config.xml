<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven conversion-service="conversionService">
	    <mvc:message-converters>
	        <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
	        <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
	        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	        	<property name="objectMapper" ref="jsonObjectMapper" />
	        </bean>
    	</mvc:message-converters>
	    <mvc:argument-resolvers>
	        <bean class="org.springframework.mobile.device.DeviceWebArgumentResolver" />
	    </mvc:argument-resolvers>
	</mvc:annotation-driven>

	<mvc:interceptors>
	    <bean class="org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor">
        	<property name="entityManagerFactory" ref="entityManagerFactory" />
    	</bean>
	    <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" >
	    	<property name="paramName" value="lang" />
	    </bean>
	    <!-- On pre-handle, resolve the device that originated the web request -->
	    <bean class="org.springframework.mobile.device.DeviceResolverHandlerInterceptor" />
	</mvc:interceptors>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/favicon.ico" location="/resources/" />
	<mvc:resources mapping="/resources/**" location="/resources/,classpath:/META-INF/resources/webjars/"/>
	<mvc:resources mapping="${document.resources.path}**" location="file:${document.repository}" cache-period="31556926"/>

	<!--  convert string to entity -->
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />
	<bean class="org.springframework.data.repository.support.DomainClassConverter">
		<constructor-arg ref="conversionService" />
	</bean>

	<bean id="tilesviewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
	    <property name="viewClass">
	        <value>au.com.regimo.web.spring.CustomTilesView</value>
	    </property>
	</bean>
	<bean id="tilesConfigurer"
	    class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
	    <property name="definitions">
	        <list>
	            <value>/WEB-INF/layouts/tiles.xml</value>
	            <value>/WEB-INF/views/**/tiles.xml</value>
	        </list>
	    </property>
	</bean>

	<bean id="multipartResolver"
	    class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <!-- one of the properties available; the maximum file size in bytes -->
	    <property name="maxUploadSize" value="10000000"/>
	</bean>

	<bean id="jsonObjectMapper" class="au.com.regimo.core.utils.JsonObjectMapper">
		<property name="prettyPrint" value="${json.prettyPrint}" />
		<property name="customDateFormat" value="${json.dateFormat}" />
	</bean>

	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1" />
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json"/>
			</map>
		</property>
		<property name="defaultViews">
			<list>
				<bean class="au.com.regimo.core.utils.CustomJsonView">
					<property name="objectMapper" ref="jsonObjectMapper" />
					<property name="messageSource" ref="messageSource" />
					<property name="extractValueFromSingleKeyModel" value="true" />
				</bean>
			</list>
		</property>
	</bean>

	<bean id="localeResolver"
    	class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
    	<property name="defaultLocale" value="en"/>
	</bean>

</beans>
